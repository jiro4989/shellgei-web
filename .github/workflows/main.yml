name: test

on:
  push:
    paths-ignore:
      - 'LICENSE'
      - 'README.*'
      - '*/README.*'
      - 'docs/*'
  release:
    types: [published]

jobs:
  skip:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Skip job"

  before:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - run: echo "no [skip ci]"

  build:
    runs-on: ubuntu-latest
    needs: before
    steps:
      - uses: actions/checkout@v1
      - name: Pull docker image
        run: docker pull jiro4989/websh:latest
      - uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: devel
      - name: Test server
        run: |
          pushd websh_server
          nimble test -Y
      - name: Build server
        run: docker-compose -f docker-compose-ci.yml run server
      # FIXME: GitHubActionsでDockerAPIを使用可能にする必要がある
      # - name: Test API
      #   run: ./.github/scripts/api_test.sh
      - name: Build front
        run: docker-compose -f docker-compose-ci.yml run front
      - name: Archive release files
        run: |
          mkdir -p dist/websh
          cp -r websh_server/bin dist/websh
          cp -r websh_front/public dist/websh
          git describe --tags --abbrev=0 > dist/websh/tag.txt
          pushd dist
          tar czf websh.tar.gz websh
          popd
          ls -lah dist/websh.tar.gz
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: application
          path: dist/websh.tar.gz
        if: startsWith(github.ref, 'refs/tags/')

  create-tag-draft:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: build
    steps:
      - uses: release-drafter/release-drafter@v5.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: application
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: application/websh.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy app
        run: curl -X POST -H "${{ env.HEADER }}" -d '${{ env.BODY }}' ${{ secrets.DEPLOY_URL }}
        env:
          HEADER: "Content-Type: application/json"
          BODY: '{"text": "sushi"}'
